[project]
name = "cli-code-agent"
version = "0.2.2"
description = "CLI code agent for interacting with LLMs and local environment"
authors = [
    {name = "James Nguyen", email = "git@nocentre.net"}
]
readme = "README.md"
requires-python = ">=3.11"
license = "Apache-2.0"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
dependencies = [
    "typer>=0.12.3", # Required for CLI
    "shellingham>=1.5.0", # Required for typer shell completion
    "rich>=13.7.1", # Required for typer rich formatting
    "opentelemetry-api>=1.31.0",
    "google-cloud-aiplatform>=1.87.0", # Required for Vertex AI
    # "google-generativeai>=0.7.0", # Required for Gemini ("google-genai>=1.12.1")?
    "google-genai>=1.12.1", # Required for Gemini
    "google-adk==0.4.0",
    "pydantic>=2.7.4", # Required for Pydantic
    "requests>=2.31.0", # Required for litellm
    "python-dotenv>=1.0.0",
    "fastapi>=0.111.0", # Required for web server
    "uvicorn>=0.34.0", # Required for serving FastAPI
    "PyYAML>=6.0.2", # Required for ADK
    # ADK extensions
    "anthropic>=0.43.0",                    # For anthropic model support
    "beautifulsoup4>=3.2.2",                # For load_web_page tool.
    "crewai[tools];python_version>='3.10'", # For CrewaiTool
    "docker>=7.0.0",                        # For ContainerCodeExecutor
    "langgraph>=0.2.60",                    # For LangGraphAgent
    "litellm>=1.63.14",                     # For LiteLLM support
    "llama-index-readers-file>=0.4.0",      # for retrieval usings LlamaIndex.
    "lxml>=5.3.0",                          # For load_web_page tool.
]

[project.urls]
"Homepage" = "https://github.com/BlueCentre/code-agent"
"Bug Tracker" = "https://github.com/BlueCentre/code-agent/issues"

[project.scripts]
code-agent = "code_agent.cli.main:app"

# uv add pytest pytest-asyncio --group dev
[project.optional-dependencies]
dev = [
    "pytest>=8.2.2",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-asyncio==0.23.7",
    "ruff>=0.4.10",
    "pre-commit>=4.2.0",
]

# UV configuration is now in uv.toml

[tool.setuptools]
packages = ["code_agent"]

[tool.setuptools.package-data]
code_agent = ["py.typed"]

# Ruff Configuration
[tool.ruff]
# Same as Black.
line-length = 160
# Assume Python 3.11+.
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (F) and a subset of the pycodestyle (E, W) rules by default.
# Adding isort (I) for import sorting.
# Adding flake8-bugbear (B) for potential bugs.
# Adding ruff-specific rules (RUF)
select = ["E", "F", "W", "I", "B", "RUF"]

# Optional: Ignore specific rules if needed
# ignore = ["F401"] # Example: Ignore unused imports

# Allow autofix for all enabled rules (when `--fix`) is provided.
# fixable = ["E", "F"]
# unfixable = []

# Allow unused variables when starting with `_`.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Configure isort
[tool.ruff.lint.isort]
known-first-party = ["code_agent"] # Tell ruff your own code directory

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
markers = [
    "asyncio: mark a test as an asyncio test",
    "unit: mark a test as a unit test",
    "integration: mark a test as an integration test",
]

# Coverage settings
[tool.coverage.run]
source = ["code_agent"]
omit = [
    "tests/*",
    "eval/*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/.venv/*",
    "custom_agents/*",
    "scripts/*",
    "sandbox/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
    "except ImportError"
]
fail_under = 80

[tool.coverage.html]
directory = "htmlcov"

# This is currently supported only for projects using poetry
# https://docs.sonarsource.com/sonarqube-server/9.9/analyzing-source-code/scanners/sonarscanner-for-python/
# [tool.sonar-scanner]
# projectKey = "BlueCentre_code-agent"
# organization = "bluecentre"
# projectName = "code-agent"
# projectVersion = "0.2.1"
# sources = "code_agent"
# tests = "tests"
# python.coverage.reportPaths = "coverage.xml"
# sourceEncoding = "UTF-8"
# coverage.exclusions = "tests/**/*,code_agent/agent/cli_runner/**/*,code_agent/agent/software_engineer/**/*,code_agent/agent/travel-concierge/**/*"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

# uv add pytest pytest-asyncio --group dev
[dependency-groups]
dev = [
    "pytest>=8.2.2",
    "pytest-asyncio==0.23.7",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.4.10",
    "pre-commit>=4.2.0",
]

# # Optional dependencies for specific features (e.g., different providers) - REMOVED DUPLICATE/MISPLACED BLOCK
# openai = { version = "^1.37.1", optional = true }
# anthropic = { version = "^0.30.0", optional = true }
# groq = { version = "^0.9.0", optional = true }
# duckduckgo-search = { version = "^6.1.9", optional = true } # Added for web search
